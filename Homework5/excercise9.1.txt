Method
------
Using import sys and sys.argv we import codon and sequence file. Using codon dictionary we compute amino acid sequence of the dna sequence. For translation in different frames, I defined three different functions to handle frames 1,2 and 3. Each of these functions use for loop to get the codons from DNA sequence and then the corresponding amino acids are called using get on the codons dictionary. If the codon is not in the dictionary the get method returns 'X'. To get the reverse complement transaltion, I first computed reverse complement of the DNA sequence by creating a dictionary with the complements and then converting the list of the DNA sequence into reverse sequence by using reverse function and then forcing that into a list.Then on I use get method and for loop to get the complements for each nucleotide and then convert the list into a string by using join method. Inorder to mak ethe code to handle 'N' at the third positionn of the codon I defined a function that will create new codon by replace N with each of the four stand nucleotides and the four codons form the keys of the dictionary with their corresponding amino acids as values. Then I created a list of the values of the dictionary and used for loop on items in the values list in an if statement, to check if the four codons code for the same amino acid. If all the codons code for the same amino acid then by using next and iter function I assign the first key of the dictionary into a variable(codon_n), else the codon with N is returned. The codon with N is returned as 'X' as it is not there in the codon table and this is handled by an if statement in the frame functions.
Strengths & Weakness:
---------------------
This code can handle any sequence and gives all the six translation frames, It can handle if a codon has N as it's third nucloetide. This code cannot handle lower case sequences and sequences with N in first or second positions of the codon. This code returns the left  out nucleotides that do not form a codon as X.
